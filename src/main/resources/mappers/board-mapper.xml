<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Board">
	
	<!-- 게시글 등록 -->
	<insert id="insertBoardContents" useGeneratedKeys="true" keyProperty="seq">
		insert into ${board_title} values (null,#{title},#{writer},#{write_date},#{header},#{notice},#{contents},#{survey_question},default)
	</insert>
	<!-- 조회수 -->
	<update id="viewCountUpdate">
		update ${board_title} set view_count = view_count + 1 where seq = #{seq}
	</update>
	<!-- 게시글 불러오기 -->
	<select id="boardContentsList" resultType="int">
	<!-- 게시글 리스트 다 가져오기 ( 사이즈 구할 때 사용 )-->
		select count(*) from ${board_title} 
	</select>
	<!-- 게시글 리스트 10개씩 가져오기 -->
	<select id="BoardContentsListBy" resultType="com.kdt.dto.BoardDTO">
		select 
			seq,title,board_title,name as writer, write_date, header,notice,contents,survey_question,view_count,favorite 
		from 
			(select 
				row_number() over(order by seq desc) as rn, 
				b.*,#{oriBoardTitle} as board_title,
				case when b.seq = parent_seq then 'true' else 'false' end as favorite 
			from ${board_title} b 
			left join Favorite_Board f 
			on id=#{id} and parent_seq = b.seq and board_title=#{board_title} 
			order by seq desc) 
		as sub 
		inner join Members m on writer=id
		where rn between ${start} and ${end}
	</select>
	<!-- 게시글 내용 불러오기 -->
	<select id="boardContents" resultType="com.kdt.dto.BoardDTO">
		select * from ${board_title} where seq=#{seq}
	</select>
	<!-- 즐겨찾기 게시물 전체 불러오기 -->
	<resultMap id="authBoardDTO" type="java.util.HashMap">
    	<result column="seq" property="seq"/>
    	<result column="board_title" property="board_title"/>
    	<result column="id" property="id"/>
    	<result column="parent_seq" property="parent_seq"/>
    	<result column="title" property="title"/>
    	<result column="writer" property="writer"/>	
    	<result column="header" property="header"/>	
    	<result column="notice" property="notice"/>	
    	<result column="view_count" property="view_count"/>	
    	<result column="write_date" property="write_date"/>	
    	<result column="name_type" property="name_type"/>	
	</resultMap>
	<!-- 즐겨찾기 게시물 개수 -->
	<select id="CountFavList" resultType="int">
		select count(*) from Favorite_Board where id = #{id}
	</select>
	<!-- 즐겨찾기 게시물 10개씩 가져오기 -->
	<select id="FavoriteListBy" resultMap="authBoardDTO">
		select
			b.seq, ori_board_title as board_title, title, write_date,header, notice, view_count, name_type, name as writer
		from Favorite_Board f
		inner join (${fromBoard}) as b on f.board_title = b.board_title and parent_seq = b.seq and id =#{id}
		inner join Mk_Board m on ori_board_title = m.board_title
		inner join Members mem on writer=mem.id order by write_date desc limit ${start},10
	</select>
	<!-- home 즐겨찾기 게시물 -->
	<select id="homeFavList" resultType="com.kdt.dto.BoardDTO">
		select ori_board_title as board_title,title,b.seq from Favorite_Board f
		inner join (${fromBoard}) b
		on parent_seq = b.seq and b.board_title = f.board_title where id=#{id} order by write_date desc limit 0,11;
	</select>
	<!-- 즐겨찾기 게시물 검색 -->
	<select id="SearchFavoriteListBy" resultMap="authBoardDTO">
		select unionTable.*,name_type from        
			(select b.seq,ori_board_title as board_title,parent_seq,title,writer,id,write_date, header,notice,view_count from Favorite_Board f 
			inner join 
				(${fromBoard}) b 
				on parent_seq=b.seq and f.board_title=b.board_title and id=#{id} order by write_date desc) as unionTable
        	inner join Mk_Board m on unionTable.board_title = m.board_title where title like #{searchText} or writer like #{searchText} 
        	order by write_date desc limit ${start},10 
	</select>
	<select id="countSearchList" resultType="int">
		select count(*) from        
			(select parent_seq,b.seq,f.board_title,title,id,writer from Favorite_Board f 
			inner join (${fromBoard}) b 
				on parent_seq=b.seq and f.board_title=b.board_title and id=#{id}) as unionTable
        	where title like #{searchText} or writer like #{searchText} 
	</select>
	
	<!-- 일반 게시판 검색 -->
	<select id="searchContentsListBy" resultType="com.kdt.dto.BoardDTO">
		select b.*,#{oriBoardTitle} as board_title, case when b.seq = parent_seq then 'true' else 'false' end as favorite 
		from ${board_title} b left join Favorite_Board f on id=#{id} and parent_seq = b.seq and board_title=#{board_title}
		where title like #{searchText} or writer like #{searchText} order by write_date desc limit ${start},10
	</select>
	<select id="searchCountContentsListBy" resultType="int">
		select count(*) from ${board_title}
		where title like #{searchText} or writer like #{searchText}
	</select>
	<!-- 공지 내용 최근 5개 가져오기 -->
	<select id="Notice" resultType="com.kdt.dto.BoardDTO">
		select seq, title, name as writer, write_date, header, notice, view_count, #{ori_board_title} as board_title from ${board_title} b
		inner join Members on writer=id where notice=true order by write_date desc limit 0,5 ;
	</select>
	<!-- 게시글 삭제 -->
	<delete id="delContents">
		delete from ${board_title} where seq=${seq}
	</delete>
	<!-- 게시글 수정 -->
	<update id="updateContentsBoard">
		update ${board_title} set title=#{title}, header=#{header}, notice=#{notice}, contents=#{contents} where seq=#{seq}
	</update>
	<update id="headerSetNullAll">
		update ${board_title} set header = null
	</update>
	<update id="updateSetHeaderNull">
		update ${board_title} set header=null where header not in (${headerList})
	</update>
	<update id="updateSurveyQuestion">
		update ${board_title} set survey_question=#{survey_question} where seq=#{seq}
	</update>
</mapper>